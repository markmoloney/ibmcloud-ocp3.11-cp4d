- name: load vars
  include_vars:
    dir: "{{playbook_dir}}/installer_files/group_vars"
- name: Disallow password authentication
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^PasswordAuthentication"
    line: "PasswordAuthentication no"
    state: present
  notify: restart ssh
- name: parse interfaces
  set_fact:
    internal_interface: "{{ item }}"
  when: hostvars[inventory_hostname]['ansible_{{item}}']['ipv4']['address'] == installer.private_ip
  with_items:
  - "{{ ansible_interfaces }}"
- name: enable EPEL repo
  yum:
    name: epel-release
    state: present
- name: Install required packages
  yum:
    name:
    - dnsmasq
    - python-jinja2
    - pyOpenSSL
    - python-lxml
    - git
    - httpd-tools
    - java-1.8.0-openjdk-headless
    - python-passlib
    - bind-utils
    - ansible
    - tmux
    state: present
- name: Update packages
  yum:
    name: "*"
    state: latest   
- name: Clone Installer Repository
  git:
    clone: yes
    repo: https://github.com/openshift/openshift-ansible.git
    dest: /opt/openshift
    version: release-3.11
- name: Copy ansible hosts
  template:
    dest:  /etc/ansible/hosts
    src: inventory.j2
    owner: root
    group: root
    mode: '0644'
    backup: yes
- name: Set hosts to not auto-update
  lineinfile:
    path: /etc/cloud/cloud.cfg
    line: "manage_etc_hosts: False"
    regexp: "^manage_etc_hosts"
- name: Adding masters to hosts file
  lineinfile:
    path: /etc/hosts
    line: "{{item.public_ip}} {{ item.name }}.{{cluster_domain}} {{item.name}}"
  loop: "{{ master }}"
- name: Adding infra to hosts file
  lineinfile:
    path: /etc/hosts
    line: "{{item.public_ip}} {{ item.name }}.{{cluster_domain}} {{item.name}}"
  loop: "{{ infra }}"
- name: Adding computes to hosts file
  lineinfile:
    path: /etc/hosts
    line: "{{item.public_ip}} {{ item.name }}.{{cluster_domain}} {{item.name}}"
  loop: "{{ computes }}"
- name: Adding installer to hosts file
  lineinfile:
    path: /etc/hosts
    line: "{{installer.public_ip}} {{ installer.name }}.{{cluster_domain}} {{installer.name}}"
- name: Adding domain-needed to dnsmasq.conf
  lineinfile:
    path: /etc/dnsmasq.conf
    regexp: '^#domain-needed'
    line: "domain-needed"
  notify: "Restart DNSMasq"
- name: Adding bogus-priv to dnsmasq.conf
  lineinfile:
    path: /etc/dnsmasq.conf
    regexp: '^#bogus-priv'
    line: "bogus-priv"
  notify: "Restart DNSMasq"
- name: Adding listen-address to dnsmasq.conf
  lineinfile:
    path: /etc/dnsmasq.conf
    regexp: '^#listen-address='
    line: "listen-address=127.0.0.1,{{ installer.private_ip }}"
  notify: "Restart DNSMasq"
- name: Adding interfaces to dnsmasq.conf
  lineinfile:
    path: /etc/dnsmasq.conf
    regexp: '^#interface='
    line: "interface={{ internal_interface }}"
  notify: "Restart DNSMasq"
- name: turn off DHCP
  lineinfile:
    path: /etc/dnsmasq.conf
    regexp: '^#no-dhcp-interface='
    line: "no-dhcp-interface="
  notify: "Restart DNSMasq"
- name: append master address to dnsmasq
  lineinfile:
    path: /etc/dnsmasq.conf
    line: address=/apps.{{ cluster_domain }}/{{ master[0].public_ip }}
  when: "{{master|length == 1}}"
  notify: "Restart DNSMasq"
- name: append infra address to dnsmasq
  lineinfile:
    path: /etc/dnsmasq.conf
    line: address=/apps.{{ cluster_domain }}/{{ infra[0].public_ip }}
  when: "{{infra|length == 1}}"
  notify: "Restart DNSMasq"
- name: Copy ssh key
  copy:
    src: "{{playbook_dir}}/installer_files/id_rsa"
    dest: /root/.ssh/id_rsa
    mode: '0400'
- name: copy public key
  copy:
    src: "{{playbook_dir}}/installer_files/id_rsa.pub"
    dest: /root/.ssh/id_rsa.pub    
- name: install client tools
  unarchive:
   remote_src: yes
   src: https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz
   dest: /usr/local/bin
   exclude:
   - LICENSE
   - README.md
   extra_opts:
   - --strip-components=1
- name: copy optional playbooks
  copy:
    src: optional_playbooks
    dest: /opt/