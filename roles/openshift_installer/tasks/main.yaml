- name: load vars
  include_vars:
    dir: "{{playbook_dir}}/installer_files/group_vars"
- name: setup known hosts
  shell:  |
    ssh-keyscan {{ item.name }}.{{ cluster_domain }} >> /root/.ssh/known_hosts
    ssh-keyscan {{ item.name }} >> /root/.ssh/known_hosts
    ssh-keyscan {{ item.private_ip }} >> /root/.ssh/known_hosts
  with_items: "{{master}}"
- name: setup known hosts
  shell:  |
    ssh-keyscan {{ item.name }}.{{ cluster_domain }} >> /root/.ssh/known_hosts
    ssh-keyscan {{ item.name }} >> /root/.ssh/known_hosts
    ssh-keyscan {{ item.private_ip }} >> /root/.ssh/known_hosts
  with_items: "{{lb}}"
- name: setup known hosts
  shell:  |
    ssh-keyscan {{ item.name }}.{{ cluster_domain }} >> /root/.ssh/known_hosts
    ssh-keyscan {{ item.name }} >> /root/.ssh/known_hosts
    ssh-keyscan {{ item.private_ip }} >> /root/.ssh/known_hosts
  with_items: "{{workers}}"
- name: copy variables
  copy:
    src: "{{playbook_dir}}/installer_files/group_vars"
    dest: /etc/ansible/
- name: remove the ansible_ssh_key variable
  lineinfile:
    path: /etc/ansible/group_vars/all.yaml
    state: absent
    regexp: '^ansible_ssh_private_key_file'
- name: creating cp4d dir
  file:
    path: /opt/cp4d/
    state: directory
- name: extracting cp4d installer files
  unarchive:
    src: "{{playbook_dir}}/installer_files/cloudpak4data-ee-3.0.1.tgz"
    dest: /opt/cp4d/
- name: copy repo.yaml
  copy:
    src: "{{playbook_dir}}/installer_files/repo.yaml"
    dest: /opt/cp4d/repo.yaml
- name: creating installer dir
  file:
    path: /opt/installer/
    state: directory
- name: copy cp4d ansible playbook
  copy:
    src: main.yaml
    dest: /opt/installer/main.yaml
- name: copy cp4d ansible files
  copy:
    src: roles
    dest: /opt/installer/
- name: copy cp4d ansible files
  copy:
    src: files
    dest: /opt/installer/
- name: copy cpd-portworx binary
  copy:
    src: "{{playbook_dir}}/installer_files/CP4D_EE_Portworx.bin"
    dest: /opt/cp4d/
    mode: '0744'